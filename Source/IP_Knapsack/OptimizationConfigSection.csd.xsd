<?xml version="1.0"?>
<!--
<auto-generated>
    This code was generated by a tool.

     Changes to this file may cause incorrect behavior and will be lost if
    the code is regenerated.
</auto-generated>
-->
<xs:schema xmlns:tns="net.optano.modeling.optimization" elementFormDefault="qualified" targetNamespace="net.optano.modeling.optimization" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:element name="optimization" type="tns:OPTANO.Modeling.Optimization.Configuration.OptimizationConfigSectionCT" />
	<xs:complexType name="OPTANO.Modeling.Optimization.Configuration.OptimizationConfigSectionCT">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element minOccurs="0" name="model" type="tns:OPTANO.Modeling.Optimization.Configuration.ModelElementCT">
				<xs:annotation>
					<xs:documentation>Defines settings for all models you will create within this application.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="solvers" type="tns:OPTANO.Modeling.Optimization.Configuration.SolversCollectionCT">
				<xs:annotation>
					<xs:documentation>The solvers collection allows you to specify settings for solvers you want to use within this application.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="OPTANO.Modeling.Optimization.Configuration.ModelElementCT">
		<xs:attribute name="modelBehavior" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>'auto' will turn on automatic variable adding, i.e. when you add constraints and objectives the variables in them will be added automatically, but never automatically removed (default), 'manual' will turn this feature off and you need to add variables manually to the model</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="enableFullNames" use="optional" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Enables the Model to export full extended variable and constraint names to solvers and writers. Default is false. Using full names requires more memory. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="computeRemovedVariables" use="optional" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>Computes a set of variables that are removed in preprocessing of the the solver. Default is false. This computation requires an additional step and takes some time and memory. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="epsilon" use="optional" type="xs:double">
			<xs:annotation>
				<xs:documentation>Epsilon for double comparison</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="copySolutionToModel" use="optional" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>True: Will copy the solution to the model variables after every Solve(), default: true</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="indexValidationStyle" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>Sets the mode to validate indices of a VariableCollection; "heuristic" preserves the index set when a new VariableCollection is creates; Disabled disables all validations; Complete updates the index sets with every variable created</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="minOperatorReplacement" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>The MinOperatorReplacement.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="maxOperatorReplacement" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>The MaxOperatorReplacement.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ceilOperatorReplacement" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>The CeilOperatorReplacement.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="floorOperatorReplacement" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>The FloorOperatorReplacement.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="absOperatorReplacement" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>The AbsOperatorReplacement.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="notConstraintReplacement" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>The NotConstraintReplacement.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="whereConstraintReplacement" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>The WhereConstraintReplacement.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="orConstraintReplacement" use="optional" type="xs:string">
			<xs:annotation>
				<xs:documentation>###</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="restoreUserModelAfterSolve" use="optional" type="xs:boolean">
			<xs:annotation>
				<xs:documentation>###</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="OPTANO.Modeling.Optimization.Configuration.SolversCollectionCT">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element minOccurs="0" maxOccurs="unbounded" name="solver" type="tns:OPTANO.Modeling.Optimization.Configuration.SolverElementCT">
				<xs:annotation>
					<xs:documentation>Specifies settings for a particular solver.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="OPTANO.Modeling.Optimization.Configuration.SolverElementCT">
		<xs:attribute name="name" use="required" type="xs:string">
			<xs:annotation>
				<xs:documentation>The name of a specific solver ("Cplex" is the default)</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="path" use="required" type="xs:string">
			<xs:annotation>
				<xs:documentation>Specifies the path to the native dll of this solver.  You can also use relative paths, like "..\..\cplex.dll"</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
</xs:schema>
